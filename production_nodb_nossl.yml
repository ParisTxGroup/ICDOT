version: '3'

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: ghcr.io/paristxgroup/icdot_production_django
    depends_on:
      - histomx
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    environment:
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/euris-ca.pem
    volumes:
      - /usr/share/ca-certificates/cloudsante/euris-ca.crt:/etc/ssl/certs/euris-ca.pem:ro
    command: /start
    ports:
      - 0.0.0.0:80:5000
    extra_hosts:
      - postgres:host-gateway
    restart: always

  histomx:
    build:
      context: .
      dockerfile: ./compose/local/histomx/Dockerfile
    image: ghcr.io/paristxgroup/icdot_production_histomx
    container_name: histomx
    environment:
      - 'HISTOMX_TEMPLATES={"DEFAULT": "/histomx/scripts/histomx_kidney.Rmd"}'
    volumes:
      # Sadly rmarkdown must have rw access to be able to knit.
      # As long as we're running only trusted code that's fine.
      - /fs1/app/histomx:/histomx:rw
    restart: always

  redis:
    image: redis:6
    restart: always
